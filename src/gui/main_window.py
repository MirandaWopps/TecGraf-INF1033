import sys  # Importa o m√≥dulo sys para manipula√ß√£o do sistema e argumentos da linha de comando
from PySide6.QtWidgets import (  # Importa widgets do PySide6 para criar a interface gr√°fica
    QApplication, QMainWindow, QPushButton, QVBoxLayout,
    QWidget, QFileDialog, QLabel, QHBoxLayout, QMessageBox 
)
from PySide6.QtGui import QIcon  # Importa QIcon para √≠cones na interface (n√£o utilizado aqui)
from PySide6.QtCore import Qt    # Importa constantes e funcionalidades do Qt

from analysis.analysis import analyze_video, analyze_webcam  # Importa fun√ß√µes de an√°lise de v√≠deo e webcam
from .history import open_history_window  # Importa fun√ß√£o para abrir a janela de hist√≥rico

class MainWindow(QMainWindow):  # Define a classe principal da janela, herdando de QMainWindow
    def __init__(self):  # M√©todo construtor da janela principal
        super().__init__()  # Inicializa a classe base QMainWindow
        self.setWindowTitle("An√°lise de Movimento") # Define o t√≠tulo da janela
        self.setGeometry(100, 100, 400, 300) # Define a posi√ß√£o e tamanho da janela

        # Layout principal
        layout = QVBoxLayout()  # Cria um layout vertical para organizar os widgets
        layout.setAlignment(Qt.AlignCenter)  # Centraliza os widgets no layout

        self.label = QLabel("Selecione uma op√ß√£o")  # Cria um label com texto inicial
        self.label.setAlignment(Qt.AlignCenter)     # Centraliza o texto do label
        layout.addWidget(self.label)                # Adiciona o label ao layout

        # Bot√µes principais
        btn_video = QPushButton("üìπ Analisar V√≠deo")  # Cria bot√£o para analisar v√≠deo
        btn_video.clicked.connect(self.load_video)    # Conecta o clique do bot√£o ao m√©todo load_video
        layout.addWidget(btn_video)                   # Adiciona o bot√£o ao layout

        btn_webcam = QPushButton("üé• Analisar Webcam") # Cria bot√£o para analisar webcam
        btn_webcam.clicked.connect(self.analyze_webcam) # Conecta o clique ao m√©todo analyze_webcam
        layout.addWidget(btn_webcam)                    # Adiciona o bot√£o ao layout

        btn_history = QPushButton("üìä Ver Hist√≥rico")   # Cria bot√£o para ver hist√≥rico
        btn_history.clicked.connect(self.view_history)  # Conecta o clique ao m√©todo view_history
        layout.addWidget(btn_history)                   # Adiciona o bot√£o ao layout

        btn_exit = QPushButton("üîö Sair")               # Cria bot√£o para sair do programa
        btn_exit.clicked.connect(self.close)            # Conecta o clique ao m√©todo close (fecha a janela)
        layout.addWidget(btn_exit)                      # Adiciona o bot√£o ao layout

        # Centraliza os elementos
        container = QWidget()           # Cria um widget container para o layout
        container.setLayout(layout)     # Define o layout do container
        self.setCentralWidget(container) # Define o container como widget central da janela

    def load_video(self):  # M√©todo para carregar e analisar um v√≠deo
        file_dialog = QFileDialog(self)  # Cria um di√°logo para sele√ß√£o de arquivo
        file_path, _ = file_dialog.getOpenFileName(  # Abre o di√°logo e obt√©m o caminho do arquivo selecionado
            self, "Selecionar v√≠deo", "", "Videos (*.mp4 *.avi *.mov)"
        )
        if file_path:  # Se um arquivo foi selecionado
            analyze_video(file_path)  # Chama a fun√ß√£o de an√°lise de v√≠deo
            show_results()            # Exibe os resultados (fun√ß√£o n√£o definida neste trecho)

    def analyze_webcam(self):  # M√©todo para analisar a webcam
        analyze_webcam()  # Chama a fun√ß√£o de an√°lise da webcam
        show_results()    # Exibe os resultados (fun√ß√£o n√£o definida neste trecho)

    def view_history(self):  # M√©todo para abrir a janela de hist√≥rico
        open_history_window()  # Chama a fun√ß√£o para abrir a janela de hist√≥rico
        

if __name__ == "__main__":  # Se o arquivo for executado diretamente
    app = QApplication(sys.argv)  # Cria a aplica√ß√£o Qt
    window = MainWindow()         # Instancia a janela principal
    window.show()                 # Exibe a janela
    sys.exit(app.exec())          # Executa o loop principal da aplica√ß√£o e encerra ao fechar